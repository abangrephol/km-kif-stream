<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Live Streaming</title>
    <link type="text/css" rel="stylesheet" href="stylesheets/style.css"/>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/shaka-player@3.0.2/dist/controls.css">
    <script src="https://cdn.jsdelivr.net/npm/shaka-player@3.0.2/dist/shaka-player.compiled.min.js"></script>
    <!--    <script src="https://cdn.jsdelivr.net/npm/shaka-player@3.0.2/dist/shaka-player.ui.js"></script>-->

    <script>

        (function () {
            const manifestUri =
                'http://localhost:8000/live/stream_360/index.mpd';

            function initApp() {
                // Install built-in polyfills to patch browser incompatibilities.
                shaka.polyfill.installAll();

                // Check to see if the browser supports the basic APIs Shaka needs.
                if (shaka.Player.isBrowserSupported()) {
                    // Everything looks good!
                    initPlayer();
                } else {
                    // This browser does not have the minimum set of APIs we need.
                    console.error('Browser not supported!');
                }
            }

            async function initPlayer() {
                // Create a Player instance.
                const video = document.getElementById('video');
                const player = new shaka.Player(video);

                // Attach player to the window to make it easy to access in the JS console.
                window.player = player;

                // Listen for error events.
                player.addEventListener('error', onErrorEvent);

                // Try to load a manifest.
                // This is an asynchronous process.
                try {
                    await player.load(manifestUri);
                    // This runs if the asynchronous load is successful.
                    console.log('The video has now been loaded!');
                } catch (e) {
                    // onError is executed if the asynchronous load fails.
                    onError(e);
                }
            }

            function onErrorEvent(event) {
                // Extract the shaka.util.Error object from the event.
                onError(event.detail);
            }

            function onError(error) {
                // Log the error.
                console.error('Error code', error.code, 'object', error);
            }

            document.addEventListener('DOMContentLoaded', initApp);
        })();
    </script>
</head>
<body>
<video id="player" class="video-js vjs-default-skin vjs-big-play-centered"
       height="360" width="auto"
       crossorigin="anonymous"
       controls
       autoplay
       preload="none"
       data-setup='{}'>
</video>
</body>
</html>